services:
  ridewise.notification:
    image: ridewiseapi
    build:
      context: .
      dockerfile: Dockerfile    
    stdin_open: true  
    tty: true         
    depends_on:
     postgres:
      condition: service_started
     rabbitmq:
      condition: service_healthy      
    networks:
      - ridewise_net
    command: ["dotnet", "RideWise.Notification.dll"] 
 
  ridewise.api:
    image: ridewiseapi
    build:
      context: .
      dockerfile: Dockerfile
    environment:            
      - ASPNETCORE_HTTP_PORTS=5001
    ports:      
      - "5000:5000"  
      - "5001:5001" 
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy 
    networks:
      - ridewise_net
    command: ["dotnet", "RideWise.Api.dll"]    
      
  rabbitmq: 
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    labels:
      NAME: "rabbitmq"
    ports:    
    - "5672:5672"    
    - "15672:15672"    
    networks:
      - ridewise_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      
  postgres:
    container_name: "Postgres"
    image: "postgres:14.7"
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=123456"
      - "POSTGRES_DB=ride_wise_api"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - ridewise_net

networks:
  ridewise_net:
    driver: bridge